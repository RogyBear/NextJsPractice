{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\n\nvar Posts = function Posts(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"YOU ARE LOOKING AT POST # \", id), comments.map(function (comment) {\n    return __jsx(Comment, _extends({}, comment, {\n      key: comment.id\n    }));\n  }));\n};\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", null, __jsx(\"h4\", null, email), __jsx(\"p\", null, body));\n};\n\nPosts.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref3) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref3.query;\n            _context.next = 3;\n            return axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            console.log(query.id);\n            return _context.abrupt(\"return\", _objectSpread({}, query, {\n              comments: data\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/roger/OneDrive/Desktop/Next Tutorial/first-next/pages/post.js"],"names":["axios","Posts","id","comments","map","comment","Comment","email","body","getInitialProps","query","get","res","data","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,QAAP,QAAOA,QAAP;AAAA,SACb,mBACC,gDAA+BD,EAA/B,CADD,EAGEC,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD;AAAA,WAAa,MAAC,OAAD,eAAaA,OAAb;AAAsB,MAAA,GAAG,EAAEA,OAAO,CAACH;AAAnC,OAAb;AAAA,GAAb,CAHF,CADa;AAAA,CAAd;;AAQA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,IAAV,SAAUA,IAAV;AAAA,SACf,mBACC,kBAAKD,KAAL,CADD,EAEC,iBAAIC,IAAJ,CAFD,CADe;AAAA,CAAhB;;AAOAP,KAAK,CAACQ,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,mBAELV,KAAK,CAACW,GAAN,gEAAkED,KAAK,CAACR,EAAxE,EAFK;;AAAA;AAEjBU,YAAAA,GAFiB;AAGfC,YAAAA,IAHe,GAGND,GAHM,CAGfC,IAHe;AAIvBC,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACR,EAAlB;AAJuB,+DAKXQ,KALW;AAKJP,cAAAA,QAAQ,EAAEU;AALN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeZ,KAAf","sourcesContent":["import axios from 'axios';\r\nconst Posts = ({ id, comments }) => (\r\n\t<div>\r\n\t\t<h1>YOU ARE LOOKING AT POST # {id}</h1>\r\n\r\n\t\t{comments.map((comment) => <Comment {...comment} key={comment.id} />)}\r\n\t</div>\r\n);\r\n\r\nconst Comment = ({ email, body }) => (\r\n\t<div>\r\n\t\t<h4>{email}</h4>\r\n\t\t<p>{body}</p>\r\n\t</div>\r\n);\r\n\r\nPosts.getInitialProps = async ({ query }) => {\r\n    \r\n\tconst res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\r\n\tconst { data } = res;\r\n\tconsole.log(query.id);\r\n\treturn { ...query, comments: data };\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}